{"version":3,"file":"static/js/115.13027120.chunk.js","mappings":"wNAwFA,UAjFe,WAAO,IAAD,IACnB,GAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAsCL,EAAAA,EAAAA,UAAQ,UAC5CI,EAAaE,IAAI,gBAD2B,QACf,IAD/B,eAAOC,EAAP,KAAoBC,EAApB,KAGMC,GAAWC,EAAAA,EAAAA,MACXC,EAAK,UAAGP,EAAaE,IAAI,gBAApB,QAAgC,GAYrCM,GAAmBC,EAAAA,EAAAA,aAAW,mCAAC,WAAMF,GAAN,kGAEVG,MAAM,GAAD,OAxBjB,+BAwBiB,iCAvBlB,mCAuBkB,kBAC2BH,IAHtB,cAE3BI,EAF2B,gBAKdA,EAASC,OALK,cAK3BC,EAL2B,yBAM1BA,GAN0B,wCAQjCC,QAAQC,IAAI,0BAAZ,MARiC,+DAAD,sDAWjC,KAEHC,EAAAA,EAAAA,YAAU,WACHT,GAILC,EAAiBD,GACdU,MAAK,SAAAC,GACJ,IAAKA,EAAKC,cACR,OAAOC,MAAM,uBAAD,OAAwBb,IAEtCT,EAASoB,EAAKG,QACf,IACAC,OAAM,SAAAC,GAAK,OAAIT,QAAQC,IAAIQ,EAAhB,GACf,GAAE,CAAChB,EAAOC,IAMX,OACE,4BACE,kBAAMgB,SA5CW,SAAAC,GAEnB,GADAA,EAAMC,iBACc,KAAhBvB,EACF,OAAOiB,MACL,uEAGJnB,EAAgB,CAAEM,MAAOJ,GAC1B,EAoCG,WACE,kBAAOwB,KAAK,OAAOC,MAAOzB,EAAa0B,SAPxB,SAAAJ,GACnBrB,EAAeqB,EAAMK,OAAOF,MAC7B,KAMK,mBAAQD,KAAK,SAAb,wBAEF,wBACG9B,EAAMkC,KAAI,gBAAGC,EAAH,EAAGA,eAAgBC,EAAnB,EAAmBA,GAAnB,OACT,0BACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,GAAME,MAAO,CAAEC,KAAM/B,GAA1C,SACG2B,KAFIC,IAFF,QAYlB,C,sBC7ED,SAASI,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAI1B,EAAOoB,EAAIK,GAAKC,GAChBhB,EAAQV,EAAKU,KAInB,CAHE,MAAOL,GAEP,YADAiB,EAAOjB,EAET,CAEIL,EAAK2B,KACPN,EAAQX,GAERkB,QAAQP,QAAQX,GAAOX,KAAKwB,EAAOC,EAEvC,CAEe,SAASK,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUP,EAASC,GACpC,IAAIF,EAAMU,EAAGK,MAAMJ,EAAME,GAEzB,SAASV,EAAMb,GACbS,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQd,EAClE,CAEA,SAASc,EAAOY,GACdjB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASY,EACnE,CAEAb,OAAMc,EACR,GACF,CACF,C","sources":["components/Movies/Movies.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'e6dcd31a9bcf35c6ea88f864789b7c2f';\n\nconst Movies = () => {\n  const [films, setFilms] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchQuery, setSearchQuery] = useState(\n    searchParams.get('query') ?? ''\n  );\n  const location = useLocation();\n  const query = searchParams.get('query') ?? '';\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (searchQuery === '') {\n      return alert(\n        'Sorry, but we dont can find empty string, you shoud write something'\n      );\n    }\n    setSearchParams({ query: searchQuery });\n  };\n\n  const fetchSearchMovie = useCallback(async query => {\n    try {\n      const response = await fetch(\n        `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n      );\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.log('Error searching movies:', error);\n      throw error;\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    fetchSearchMovie(query)\n      .then(info => {\n        if (!info.total_results) {\n          return alert(`Sorry we dont found ${query}`);\n        }\n        setFilms(info.results);\n      })\n      .catch(error => console.log(error));\n  }, [query, fetchSearchMovie]);\n\n  const handleChange = event => {\n    setSearchQuery(event.target.value);\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" value={searchQuery} onChange={handleChange} />\n        <button type=\"submit\">Search</button>\n      </form>\n      <ul>\n        {films.map(({ original_title, id }) => (\n          <div>\n            <li key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                {original_title}\n              </Link>\n            </li>\n          </div>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nMovies.propTypes = {\n  searchResults: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default Movies;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["useState","films","setFilms","useSearchParams","searchParams","setSearchParams","get","searchQuery","setSearchQuery","location","useLocation","query","fetchSearchMovie","useCallback","fetch","response","json","data","console","log","useEffect","then","info","total_results","alert","results","catch","error","onSubmit","event","preventDefault","type","value","onChange","target","map","original_title","id","to","state","from","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}